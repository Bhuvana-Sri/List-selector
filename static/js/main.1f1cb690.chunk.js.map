{"version":3,"sources":["assets/download.svg","assets/circle.svg","data/content.js","components/FileTable/FileTable.js","App.js","index.js"],"names":["content","name","device","path","status","FileTable","useState","selectedCount","setSelectedCount","useEffect","map","item","isChecked","handleCheckboxSelect","event","forEach","target","id","document","getElementById","indeterminate","length","Fragment","type","data-testid","className","checked","onChange","htmlFor","title","disabled","onClick","message","scheduledCount","availableCount","toLowerCase","alert","aria-hidden","alt","src","download","aria-label","aria-rowcount","scope","roll","role","circle","charAt","toUpperCase","slice","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1f1cb690.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/download.580b5ffb.svg\";","export default __webpack_public_path__ + \"static/media/circle.a21ff852.svg\";","let content = [\n  {\n    name: \"smss.exe\",\n    device: \"Stark\",\n    path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\smss.exe\",\n    status: \"scheduled\",\n  },\n\n  {\n    name: \"netsh.exe\",\n    device: \"Targaryen\",\n    path: \"\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\netsh.exe\",\n    status: \"available\",\n  },\n\n  {\n    name: \"uxtheme.dll\",\n    device: \"Lanniester\",\n    path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\uxtheme.dll\",\n    status: \"available\",\n  },\n\n  {\n    name: \"cryptbase.dll\",\n    device: \"Martell\",\n    path: \"\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\cryptbase.dll\",\n    status: \"scheduled\",\n  },\n\n  {\n    name: \"7za.exe\",\n    device: \"Baratheon\",\n    path: \"\\\\Device\\\\HarddiskVolume1\\\\temp\\\\7za.exe\",\n    status: \"scheduled\",\n  },\n];\n\nexport default content;\n","import React, { useState, useEffect } from \"react\";\n\nimport download from \"../../assets/download.svg\";\nimport circle from \"../../assets/circle.svg\";\nimport content from \"../../data/content\";\n\nfunction FileTable() {\n  const [selectedCount, setSelectedCount] = useState(0);\n\n  useEffect(() => {\n    content.map((item) => (item.isChecked = false));\n    setSelectedCount(0);\n  }, []);\n\n  const selectDeselectAll = () => {\n    if (selectedCount === content.length) {\n      content.map((item) => (item.isChecked = false));\n      setSelectedCount(0);\n    } else {\n      content.map((item) => (item.isChecked = true));\n      setSelectedCount(content.length);\n    }\n  };\n\n  const handleCheckboxSelect = (event) => {\n    content.forEach((item) => {\n      if (event.target.id === item.name) {\n        if (item.isChecked === true) {\n          item.isChecked = false;\n          if (selectedCount === 1)\n            document.getElementById(\"all-checkbox\").indeterminate = false;\n          else document.getElementById(\"all-checkbox\").indeterminate = true;\n          setSelectedCount(selectedCount - 1);\n        } else {\n          item.isChecked = true;\n          if (selectedCount === content.length - 1)\n            document.getElementById(\"all-checkbox\").indeterminate = false;\n          else document.getElementById(\"all-checkbox\").indeterminate = true;\n          setSelectedCount(selectedCount + 1);\n        }\n      }\n    });\n  };\n\n  const handleDownloadClick = () => {\n    let message = \"\",\n      scheduledCount = 0,\n      availableCount = 0;\n    content.forEach((item) => {\n      if (item.isChecked === true) {\n        if (item.status.toLowerCase() === \"available\") {\n          message += \"Device: \" + item.device + \"\\nPath: \" + item.path + \"\\n\\n\";\n          availableCount++;\n        } else scheduledCount++;\n      }\n    });\n    if (availableCount === 0)\n      message += \"Error: Scheduled devices cannot be downloaded\";\n    else if (scheduledCount !== 0)\n      message += \"Note: Results contain only Available devices\";\n    alert(message);\n  };\n\n  return (\n    <React.Fragment>\n      <input\n        type=\"checkbox\"\n        id=\"all-checkbox\"\n        data-testid=\"all-checkbox\"\n        className=\"all-checkbox\"\n        checked={selectedCount === content.length}\n        onChange={selectDeselectAll}\n      />\n      <label htmlFor=\"all-checkbox\">\n        {selectedCount === 0 ? \"None Selected\" : \"Selected \" + selectedCount}\n      </label>\n      <button\n        title={\n          selectedCount === 0\n            ? \"None selected\"\n            : \"Only Available devices may be downloaded\"\n        }\n        className=\"download-button\"\n        disabled={selectedCount === 0}\n        onClick={handleDownloadClick}\n      >\n        <img\n          aria-hidden=\"true\"\n          className=\"download-icon\"\n          alt=\"download\"\n          src={download}\n        />\n        Download Selected\n      </button>\n      <table\n        data-testid=\"table-list\"\n        aria-label=\"List selector\"\n        aria-rowcount={content.length}\n      >\n        <thead>\n          <tr>\n            <th></th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Device</th>\n            <th scope=\"col\">Path</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {content.map((item) => (\n            <tr\n              roll=\"row\"\n              key={item.name}\n              className={item.isChecked ? \"active\" : \"\"}\n            >\n              <td role=\"cell\">\n                <input\n                  type=\"checkbox\"\n                  className=\"list-checkbox\"\n                  id={item.name}\n                  checked={item.isChecked ? item.isChecked : false}\n                  onChange={handleCheckboxSelect}\n                />\n              </td>\n              <td role=\"cell\">{item.name}</td>\n              <td role=\"cell\">{item.device}</td>\n              <td role=\"cell\">{item.path}</td>\n              <td role=\"cell\">\n                {item.status === \"available\" && (\n                  <img\n                    aria-hidden=\"true\"\n                    className=\"circle-icon\"\n                    alt=\"circle\"\n                    src={circle}\n                  />\n                )}\n                {item.status.charAt(0).toUpperCase() + item.status.slice(1)}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </React.Fragment>\n  );\n}\n\nexport default FileTable;\n","import FileTable from \"./components/FileTable/FileTable\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FileTable />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}